emh_printEmptySubckt t
useSpectreInfo "spectre veriloga spice"
updateShadow nil
hnlVerilogTermSyncUp nil
amsExpScalingFactor "no"
initFile ""
checkForMissingShadows nil
emh_printPhysicalInst nil
useRunDirNetlistsOnly t
amsVerbose nil
emh_macroLibList ""
netlistMaxWarn ""
preferMEOverImplicit t
emh_phyCell ""
forceCleanTempDirForShadow nil
splitNetlistFormat nil
desVarsToBeNetlistedAsInt ""
amsLSB_MSB nil
termMismatch "ignore"
amsmaxErrors "50"
print_control_vars t
dnaAssemblerWaitTime 3600
headerText "none"
vlogSupply1Sigs ""
netlistNoWarn ""
templateScript ""
paramDefVals ""
shortInstanceList ""
vlogSupply0Sigs ""
paramGlobalDefVal "0"
allDspfFiles nil
amsDefinitionViews "symbol schematic extracted"
useDefparam nil
amsPortConnectionByNameOrOrder "name"
includeInstCdfParams nil
includeFiles "disciplines.vams userDisciplines.vams"
useEffectiveCDF nil
unlPortDrill ""
upgradeMsgSevWarn ""
unlAnalogOnly ""
ifdefLanguageExtensions nil
dspfFile nil
amsScalarInstances t
upgradeMsgSevError ""
templateFile ""
vlogGroundSigs "gnd!"
amsExcludeParams ""
amsTraverseConfigForTextViews t
emh_digNetlistFile "digital.v"
ossEscNameMapping t
verboseShadowLog nil
runNProcForSch nil
emh_maskLayoutView t
modifyParamScope "no"
allowSparseBuses "yes"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
createSpectreCktForExtracted nil
emh_PrintPwrGndConnectivity nil
iterInstExpFormat "%b_%i"
amsVerilogHonorSmForLeaf nil
ignorePrintNettype nil
allowDeviantBuses "yes"
useUselibForSpice nil
amsTempDirForShadows ""
emh_DigitalInstList nil
unquoteNumbers t
aliasInstFormat "ams_alias_inst_%i"
netClashFormat "%b_netclash"
allowNameCollisions "yes"
termDirectionMismatch "ignore"
useFileUselib t
instClashFormat "%b_instclash"
allowIllegalIdentifiers "yes"
enablePkgImport nil
