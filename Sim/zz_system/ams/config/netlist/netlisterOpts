modifyParamScope "no"
print_control_vars t
amsmaxErrors "50"
vlogSupply1Sigs ""
amsScalarInstances t
templateFile ""
useEffectiveCDF nil
amsLSB_MSB nil
includeInstCdfParams nil
dnaAssemblerWaitTime 3600
termDirectionMismatch "ignore"
vlogSupply0Sigs ""
netlistNoWarn ""
amsDefinitionViews "symbol schematic extracted"
amsPortConnectionByNameOrOrder "name"
netClashFormat "%b_netclash"
allowIllegalIdentifiers "yes"
emh_phyCell ""
useFileUselib t
forceCleanTempDirForShadow nil
instClashFormat "%b_instclash"
allowNameCollisions "yes"
includeFiles "disciplines.vams userDisciplines.vams"
splitNetlistFormat nil
allDspfFiles nil
emh_macroLibList ""
useUselibForSpice nil
hnlVerilogTermSyncUp nil
unquoteNumbers t
aliasInstFormat "ams_alias_inst_%i"
initFile ""
useDefparam nil
allowDeviantBuses "yes"
netlistMaxWarn ""
ifdefLanguageExtensions nil
checkForMissingShadows nil
createSpectreCktForExtracted nil
dspfFile nil
iterInstExpFormat "%b_%i"
allowSparseBuses "yes"
amsVerilogHonorSmForLeaf nil
emh_printPhysicalInst nil
amsTraverseConfigForTextViews t
emh_printEmptySubckt t
updateShadow nil
ossEscNameMapping t
verboseShadowLog nil
preferMEOverImplicit t
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
emh_PrintPwrGndConnectivity nil
desVarsToBeNetlistedAsInt ""
enablePkgImport nil
amsExcludeParams ""
amsVerbose nil
termMismatch "ignore"
amsTempDirForShadows ""
emh_digNetlistFile "digital.v"
emh_maskLayoutView t
amsExpScalingFactor "no"
paramGlobalDefVal "0"
ignorePrintNettype nil
useSpectreInfo "spectre veriloga spice"
emh_DigitalInstList nil
paramDefVals ""
runNProcForSch nil
shortInstanceList ""
templateScript ""
unlPortDrill ""
unlAnalogOnly ""
headerText "none"
useRunDirNetlistsOnly t
upgradeMsgSevError ""
vlogGroundSigs "gnd!"
upgradeMsgSevWarn ""
