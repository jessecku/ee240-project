useEffectiveCDF nil
ifdefLanguageExtensions nil
amsScalarInstances t
termDirectionMismatch "ignore"
templateFile ""
vlogGroundSigs "gnd!"
amsPortConnectionByNameOrOrder "name"
amsDefinitionViews "symbol schematic extracted"
useDefparam nil
print_control_vars t
netlistNoWarn ""
includeInstCdfParams nil
dnaAssemblerWaitTime 3600
includeFiles "disciplines.vams userDisciplines.vams"
unquoteNumbers t
aliasInstFormat "ams_alias_inst_%i"
allowDeviantBuses "yes"
netlistMaxWarn ""
emh_macroLibList ""
useUselibForSpice nil
instClashFormat "%b_instclash"
allowNameCollisions "yes"
splitNetlistFormat nil
dspfFile nil
netClashFormat "%b_netclash"
allowIllegalIdentifiers "yes"
emh_phyCell ""
useFileUselib t
forceCleanTempDirForShadow nil
allDspfFiles nil
ossEscNameMapping t
verboseShadowLog nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
amsTraverseConfigForTextViews t
emh_printEmptySubckt t
updateShadow nil
modifyParamScope "no"
iterInstExpFormat "%b_%i"
allowSparseBuses "yes"
amsVerilogHonorSmForLeaf nil
emh_printPhysicalInst nil
checkForMissingShadows nil
createSpectreCktForExtracted nil
amsVerbose nil
amsTempDirForShadows ""
desVarsToBeNetlistedAsInt ""
enablePkgImport nil
preferMEOverImplicit t
emh_DigitalInstList nil
termMismatch "ignore"
runNProcForSch nil
useSpectreInfo "spectre veriloga spice"
emh_PrintPwrGndConnectivity nil
hnlVerilogTermSyncUp nil
amsExpScalingFactor "no"
initFile ""
ignorePrintNettype nil
emh_maskLayoutView t
amsExcludeParams ""
emh_digNetlistFile "digital.v"
useRunDirNetlistsOnly t
upgradeMsgSevError ""
templateScript ""
unlAnalogOnly ""
paramDefVals ""
unlPortDrill ""
upgradeMsgSevWarn ""
vlogSupply0Sigs ""
paramGlobalDefVal "0"
shortInstanceList ""
amsmaxErrors "50"
headerText "none"
vlogSupply1Sigs ""
amsLSB_MSB nil
