instClashFormat "%b_instclash"
allowNameCollisions "yes"
upgradeMsgSevWarn ""
netClashFormat "%b_netclash"
allowIllegalIdentifiers "yes"
includeFiles "disciplines.vams userDisciplines.vams"
useFileUselib t
allDspfFiles nil
unquoteNumbers t
aliasInstFormat "ams_alias_inst_%i"
allowDeviantBuses "yes"
upgradeMsgSevError ""
unlAnalogOnly ""
useDefparam nil
useUselibForSpice nil
unlPortDrill ""
iterInstExpFormat "%b_%i"
ifdefLanguageExtensions nil
allowSparseBuses "yes"
amsVerilogHonorSmForLeaf nil
dspfFile nil
vlogGroundSigs "gnd!"
createSpectreCktForExtracted nil
ossEscNameMapping t
verboseShadowLog nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
amsTraverseConfigForTextViews t
modifyParamScope "no"
amsScalarInstances t
enablePkgImport nil
templateFile ""
emh_DigitalInstList nil
useEffectiveCDF nil
amsTempDirForShadows ""
termDirectionMismatch "ignore"
ignorePrintNettype nil
emh_maskLayoutView t
amsExcludeParams ""
includeInstCdfParams nil
emh_digNetlistFile "digital.v"
amsPortConnectionByNameOrOrder "name"
runNProcForSch nil
amsDefinitionViews "symbol schematic extracted"
emh_PrintPwrGndConnectivity nil
initFile ""
splitNetlistFormat nil
shortInstanceList ""
emh_phyCell ""
forceCleanTempDirForShadow nil
netlistMaxWarn ""
templateScript ""
emh_macroLibList ""
headerText "none"
emh_printPhysicalInst nil
amsLSB_MSB nil
checkForMissingShadows nil
useRunDirNetlistsOnly t
emh_printEmptySubckt t
updateShadow nil
vlogSupply1Sigs ""
desVarsToBeNetlistedAsInt ""
preferMEOverImplicit t
amsVerbose nil
termMismatch "ignore"
amsmaxErrors "50"
hnlVerilogTermSyncUp nil
amsExpScalingFactor "no"
netlistNoWarn ""
vlogSupply0Sigs ""
paramGlobalDefVal "0"
dnaAssemblerWaitTime 3600
paramDefVals ""
print_control_vars t
useSpectreInfo "spectre veriloga spice"
